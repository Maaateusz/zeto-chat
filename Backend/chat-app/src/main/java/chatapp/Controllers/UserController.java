package chatapp.Controllers;

import chatapp.DataBase.UserRepository;
import chatapp.Models.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import java.security.Principal;

@RestController    // This means that this class is a Controller
@RequestMapping("/user") // This means URL's start with /user (after Application path)
@CrossOrigin
public class UserController
{
    @Autowired // This means to get the bean called userRepository
                // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping("/login")
    public User login(@RequestBody User user)
    {
        User userTMP = userRepository.findUserByName(user.getName());
        if (userTMP == null)
        {
            return null;
        }
        else
        {
            if(userTMP.getPassword().equals(user.getPassword()))
            {
                return userTMP;
            }
        }
        return null;
    }

    @PostMapping("/registration")
    public User addPostUser( @RequestBody User user)
    {
        if (userRepository.findUserByName(user.getName()) != null)
        {
            return null;
        }
        user.setId(null);
        return userRepository.save(user);
        //return user.toString();
    }

    @GetMapping("/all")
    public @ResponseBody Iterable<User> getAllUsers()
    {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping("/{id}")
    public @ResponseBody Iterable<User> getUser(@PathVariable(value = "id") Integer userId)
    {
        return userRepository.findUserById(userId);
    }

    @RequestMapping("/user")
    public Principal user(Principal user) {
        return user;
    }

}




