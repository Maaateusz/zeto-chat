package chatapp.Controllers;

import chatapp.DataBase.UserRepository;
import chatapp.Models.User;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.persistence.EntityNotFoundException;
import javax.validation.Valid;
import java.util.List;

/*@RestController
@RequestMapping("/user")
@CrossOrigin*/

@RestController    // This means that this class is a Controller
@RequestMapping("/user") // This means URL's start with /user (after Application path)
@CrossOrigin
public class UserController
{
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    /*@GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody
    String addGetUser (@RequestParam String name
            , @RequestParam String password)
    {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        // w Postmanie np, http://localhost:8080/user/add?name=Mateusz&password=BukInternetuff
        User n = new User();
        n.setName(name);
        n.setPassword(password);
        userRepository.save(n);
        return n.toString();
    }*/

    @PostMapping("/add")
    public User addPostUser(/*@Valid*/ @RequestBody User user)
    {
        user.setId(null);
        return userRepository.save(user);
        //return user.toString();
    }

    @GetMapping("/all")
    public @ResponseBody Iterable<User> getAllUsers()
    {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
    /*@GetMapping("/all")
    public List<User> getAllUsers()
    {
        return userRepository.findAll();
    }*/

    /*@GetMapping("/{id}")
    public User getUser(@PathVariable(value = "id") Integer userId)
    {
        return userRepository.findById(userId).orElse("dsa");
    }*/
}
